(async(pl, sys, args, flags)=>{
	if (!game.systems.software.active(sys, "malgen"))
		return `Execution failed: Missing software.`;

	if (args[0]) {
		if (args[0].match(/[^_a-zA-Z0-9]/))
			return "¬yinvalid name¬*";
		if (args[0].length > 16)
			return "¬yname is too long¬*";
		
		if (game.jobs[sys.id] && game.jobs[sys.id].find(j=>j.name=="malware"))
			return "¬yslow down! already on it¬*";
		
		switch (args[1]) {
			case "scrambler":
				if (sys.bits-100 < 0) return "¬yyou don't have enough bits¬*";

				if (game.jobs[sys.id] && game.jobs[sys.id].length >= sys.hardware.ram)
					return "Could not allocate memory for this job.";

				sys.bits -= 100;
				await game.db.set("systems", sys.id, sys);

				game.systems.jobs.create(sys, "malware", async()=>{
					const s = await game.db.get("systems", sys.id);

					s.software.push({
						name: args[0],
						type: "scrambler",
						tier: 1,
						installed: false,
						malware: true
					});

					await game.db.set("systems", s.id, s);

					game.systems.broadcast(s, `¬yfinished creating ${args[0]} (${args[1]})¬*`);
				}, 20000);

				return `¬ycreating ${args[0]} (${args[1]})¬*`;
			case "bitminer":
				if (sys.bits-200 < 0) return "¬yyou don't have enough bits¬*";

				if (game.jobs[sys.id] && game.jobs[sys.id].length >= sys.hardware.ram)
					return "Could not allocate memory for this job.";

				sys.bits -= 200;
				await game.db.set("systems", sys.id, sys);

				game.systems.jobs.create(sys, "malware", async()=>{
					const s = await game.db.get("systems", sys.id);

					s.software.push({
						name: args[0],
						type: "bitminer",
						tier: 1,
						installed: false,
						malware: true
					});

					await game.db.set("systems", s.id, s);

					game.systems.broadcast(s, `¬yfinished creating ${args[0]} (${args[1]})¬*`);
				}, 30000);

				return `¬ycreating ${args[0]} (${args[1]})¬*`;
			case "slave":
				if (sys.bits-400 < 0) return "¬yyou don't have enough bits¬*";

				if (game.jobs[sys.id] && game.jobs[sys.id].length >= sys.hardware.ram)
					return "Could not allocate memory for this job.";

				sys.bits -= 400;
				await game.db.set("systems", sys.id, sys);

				game.systems.jobs.create(sys, "malware", async()=>{
					const s = await game.db.get("systems", sys.id);

					s.software.push({
						name: args[0],
						type: "slave",
						tier: 1,
						installed: false,
						malware: true
					});

					await game.db.set("systems", s.id, s);

					game.systems.broadcast(s, `¬yfinished creating ${args[0]} (${args[1]})¬*`);
				}, 40000);

				return `¬ycreating ${args[0]} (${args[1]})¬*`;
			default:
				return "¬yinvalid type¬*";
		}
	}

	return `Usage: malware [name] [type]
	
¬yTypes:¬*
¬y scrambler:¬*
¬y  Scrambles all files on a system.¬*
¬y  Single use.¬*
¬y  Costs 100β.¬*
¬y bitminer:¬*
¬y  Mines bits periodically.¬*
¬y  Costs 200β.¬*
¬y slave:¬*
¬y  Allows a breached system to be controlled by your botnet.¬*
¬y  Costs 400β.¬*`;
});